name: Docker Image Builder

on:
  workflow_dispatch:
  schedule:
    # Run once a week on Fridays
    - cron: "0 0 * * FRI"
  pull_request:
    paths:
      - '.github/workflows/build-docker-images.yml'
      - 'runners/**'
      - 'cryptography-linux/**'
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-docker-images.yml'
      - 'runners/**'
      - 'cryptography-linux/**'

jobs:
  # Build containers for x86
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        IMAGE:
          - {TAG_NAME: "cryptography-runner-centos8", DOCKERFILE_PATH: "runners/centos8"}
          - {TAG_NAME: "cryptography-runner-centos8-fips", DOCKERFILE_PATH: "runners/centos8", BUILD_ARGS: "--build-arg FIPS=1"}

          - {TAG_NAME: "cryptography-runner-fedora", DOCKERFILE_PATH: "runners/fedora"}
          - {TAG_NAME: "cryptography-runner-alpine", DOCKERFILE_PATH: "runners/alpine"}

          - {TAG_NAME: "cryptography-runner-stretch", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=stretch"}
          - {TAG_NAME: "cryptography-runner-buster", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=buster"}
          - {TAG_NAME: "cryptography-runner-bullseye", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=bullseye"}
          - {TAG_NAME: "cryptography-runner-bookworm", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=bookworm"}
          - {TAG_NAME: "cryptography-runner-sid", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=sid"}

          - {TAG_NAME: "cryptography-runner-ubuntu-bionic", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=bionic"}
          - {TAG_NAME: "cryptography-runner-ubuntu-focal", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=focal"}
          - {TAG_NAME: "cryptography-runner-ubuntu-rolling", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=rolling"}

          - {TAG_NAME: "cryptography-manylinux2010:x86_64", DOCKERFILE_PATH: "cryptography-linux", BUILD_ARGS: "-f cryptography-linux/Dockerfile-linux --build-arg PYCA_RELEASE=manylinux2010_x86_64"}
          - {TAG_NAME: "cryptography-manylinux2014:x86_64", DOCKERFILE_PATH: "cryptography-linux", BUILD_ARGS: "-f cryptography-linux/Dockerfile-linux --build-arg PYCA_RELEASE=manylinux2014_x86_64"}
          - {TAG_NAME: "cryptography-manylinux_2_24:x86_64", DOCKERFILE_PATH: "cryptography-linux", BUILD_ARGS: "-f cryptography-linux/Dockerfile-linux --build-arg PYCA_RELEASE=manylinux_2_24_x86_64"}
          - {TAG_NAME: "cryptography-musllinux_1_1:x86_64", DOCKERFILE_PATH: "cryptography-linux", BUILD_ARGS: "-f cryptography-linux/Dockerfile-linux --build-arg PYCA_RELEASE=musllinux_1_1_x86_64"}

    name: "Building docker image ${{ matrix.IMAGE.TAG_NAME }}"
    steps:
      - uses: actions/checkout@v2.3.4
      # Pull the previous image, but if it fails return true anyway.
      # Sometimes we add new docker images and if they've never been pushed
      # they can't be pulled.
      - name: Pull existing image
        run: docker pull ghcr.io/pyca/${{ matrix.IMAGE.TAG_NAME }} || true
        if: github.event_name != 'schedule'
      - name: Build image
        run: docker build --pull --cache-from ghcr.io/pyca/${{ matrix.IMAGE.TAG_NAME }} -t ghcr.io/pyca/${{ matrix.IMAGE.TAG_NAME }} ${{ matrix.IMAGE.DOCKERFILE_PATH }} ${{ matrix.IMAGE.BUILD_ARGS }}
      - name: Login to docker
        run: 'docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" ghcr.io'
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.workflow_dispatch == 'workflow_dispatch') && github.ref == 'refs/heads/main'
      - name: Push image
        run: docker push ghcr.io/pyca/${{ matrix.IMAGE.TAG_NAME }}
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.workflow_dispatch == 'workflow_dispatch') && github.ref == 'refs/heads/main'

  # Build the linux aarch64 containers
  build_linux_aarch64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        IMAGE:
          - {TAG_NAME: "cryptography-manylinux2014_aarch64", DOCKERFILE_PATH: "cryptography-linux", BUILD_ARGS: "-f cryptography-linux/Dockerfile-linux --build-arg PYCA_RELEASE=manylinux2014_aarch64"}
          - {TAG_NAME: "cryptography-manylinux_2_24:aarch64", DOCKERFILE_PATH: "cryptography-linux", BUILD_ARGS: "-f cryptography-linux/Dockerfile-linux --build-arg PYCA_RELEASE=manylinux_2_24_aarch64"}
          - {TAG_NAME: "cryptography-musllinux_1_1:aarch64", DOCKERFILE_PATH: "cryptography-linux", BUILD_ARGS: "-f cryptography-linux/Dockerfile-linux --build-arg PYCA_RELEASE=musllinux_1_1_aarch64"}
          - {TAG_NAME: "cryptography-runner-ubuntu-focal:aarch64", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=focal"}

    name: "Building docker image ${{ matrix.IMAGE.TAG_NAME }}"
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1.2.0
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
      # Pull the previous image, but if it fails return true anyway.
      # Sometimes we add new docker images and if they've never been pushed
      # they can't be pulled.
      - name: Pull existing image
        run: docker pull ghcr.io/pyca/${{ matrix.IMAGE.TAG_NAME }}:latest || true
        if: github.event_name != 'schedule'
      - name: Build image
        run: >
          docker buildx build --platform linux/arm64 --pull --cache-from ghcr.io/pyca/${{ matrix.IMAGE.TAG_NAME }}
          --cache-to "type=local,dest=/tmp/.buildx-cache" --output "type=image,push=false"
          -t ghcr.io/pyca/${{ matrix.IMAGE.TAG_NAME }} ${{ matrix.IMAGE.DOCKERFILE_PATH }} ${{ matrix.IMAGE.BUILD_ARGS }}
      - name: Login to docker
        run: 'docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" ghcr.io'
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.workflow_dispatch == 'workflow_dispatch') && github.ref == 'refs/heads/main'
      - name: Push image
        run: >
          docker buildx build --cache-from "type=local,src=/tmp/.buildx-cache"
          --platform linux/arm64 --output "type=image,push=true" -t ghcr.io/pyca/${{ matrix.IMAGE.TAG_NAME }}
          ${{ matrix.IMAGE.DOCKERFILE_PATH }} ${{ matrix.IMAGE.BUILD_ARGS }}
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.workflow_dispatch == 'workflow_dispatch') && github.ref == 'refs/heads/main'
